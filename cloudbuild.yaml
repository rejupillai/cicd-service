steps:
#First Clone from Google Cloud Source Repository  
- name: 'gcr.io/cloud-builders/git'
  #args: ['clone','https://source.developers.google.com/p/${_PROJECT}/r/${_REPO_NAME}']
  args: ['clone','https://github.com/rejupillai/cicd-service.git']

#Build the image 
- name: 'gcr.io/cloud-builders/docker'
  args: ['build','-t','gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}','.']

#Push the image  
- name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}']

#Create inital deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'create'
  - 'deployment'
  - '${_DEPLOYMENTNAME}'
  - '--image=gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
#kubectl create deployment nginx --image=nginx


#Create service (NodePort) to access app
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'expose'
  - 'deployment'
  - '${_DEPLOYMENTNAME}'
  - '--port=40000 --target-port=8080 --type=NodePort'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
  #kubectl expose deployment hello-world --type=NodePort --name=example-service

#Update the container image using kubectl set
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/${_DEPLOYMENTNAME}'
  - '${_CONTAINERNAME}=gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'



  
substitutions:
    #GCP Specific configuration. Please DON'T change anything
    _PROJECT: ultra-might-296906
    _ZONE: us-central1-c
    _GKE_CLUSTER: cluster-1
    
    #Repository Specific configuration. DevOps can change this settings
    _DEPLOYMENTNAME: hello-world-service
    _CONTAINERNAME: hello-world-service    
    _REPO_NAME: cicd-service
    
    # Developers ONLY change
    _VERSION: v1.0
    
options:
    substitution_option: 'ALLOW_LOOSE'

